# -*- coding: utf-8 -*-
"""oasis5(ds).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fzPGls3Fej6poWLJHnst4b4fGiEWcKNN
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('https://raw.githubusercontent.com/erkansirin78/datasets/master/Advertising.csv')
data

data.rename(columns={'Unnamed: 0': 'Index'}, inplace=True)

data.isnull().sum()

data.describe()

data.info()

data.hist(bins=20)

sns.lmplot(x='TV', y='Sales', data=data)
sns.lmplot(x='Radio', y='Sales', data=data)
sns.lmplot(x='Newspaper',y= 'Sales', data=data)

data.corr()

corrmat = data.corr()
figure, ax = plt.subplots(figsize=(12, 9))
sns.heatmap(corrmat, vmin=0, vmax=1, square=True, cmap="YlGnBu", ax=ax)
plt.show()

sns.pairplot(data)

X =np.array(data.drop(['Sales'], 1))
Y =np.array(data['Sales'])

print(X),print(Y)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test= train_test_split(X, Y,train_size=0.8,test_size=0.2,random_state=0)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_predict = regressor.predict(X_test)
y_predict

coefficient = regressor.coef_
coefficient

intercept = regressor.intercept_
print(intercept)

from sklearn.metrics import r2_score
r2_score(y_test, y_predict)

forecast=pd.DataFrame(data={'Forecasted Sales': y_predict.flatten()})
forecast

import statsmodels.formula.api as sm
lin_model = sm.ols(formula="Sales ~ TV + Radio + Newspaper", data=data).fit()
print(lin_model.params, "\n")

lin_model.summary()